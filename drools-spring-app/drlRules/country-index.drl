package sbnz.integracija;

import sbnz.integracija.example.model.Country;
import sbnz.integracija.example.model.Patient;

rule "Low IDV index country"
	when
		$c: Country (idvIndex < 0.3, countryDevelopmentLevel == Country.DevelompentLevel.UNKNOWN )
	then
		$c.setCountryDevelopmentLevel(Country.DevelompentLevel.LOW);
		update($c);
end

rule "High IDV index country"
	when
		$c: Country (idvIndex > 0.3, countryDevelopmentLevel == Country.DevelompentLevel.UNKNOWN )
	then
		$c.setCountryDevelopmentLevel(Country.DevelompentLevel.HIGH);
		update($c);
end

rule "Country has a patient that is COVID positive - LOW"
	no-loop true
	when
		$c: Country($patients: patient,
					covidPositive == false)
		$pNumber: Integer() from accumulate(
								Patient(
									covidStatus == Patient.CovidStatus.POSITIVE
								) from $patients,
								sum(1)
							)
		eval($pNumber > 0)
	then
		$c.setCovidPositive(true);
end

rule "Country has a patient that is COVID positive - HIGH"
	no-loop true
	when
		$c: Country($patients: patient,
					covidPositive == false)
		$pNumber: Integer() from accumulate(
								Patient(
									COVID19Positive == 1
								) from $patients,
								sum(1)
							)
		eval($pNumber > 0)
	then
		$c.setCovidPositive(true);
end

rule "Country has been visited by a patient that is COVID positive - LOW"
	no-loop true
	when
		$c: Country($pVisited: patientsVisited,
					covidPositive == false)
		$intValue: Integer() from accumulate(
								Patient(
									covidStatus == Patient.CovidStatus.POSITIVE
								) from $pVisited,
								sum(1)
							)
		eval($intValue > 0)
	then
		$c.setCovidPositive(true);
end

rule "Country has been visited by a patient that is COVID positive - HIGH"
	no-loop true
	when
		$c: Country($pVisited: patientsVisited,
					covidPositive == false)
		$intValue: Integer() from accumulate(
								Patient(
									COVID19Positive == 1
								) from $pVisited,
								sum(1)
							)
		eval($intValue > 0)
	then
		$c.setCovidPositive(true);
end