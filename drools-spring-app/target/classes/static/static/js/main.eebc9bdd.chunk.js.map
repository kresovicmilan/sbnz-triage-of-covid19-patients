{"version":3,"sources":["components/ImageWrapper/ImageWrapper.module.css","containers/Country/Country.module.css","containers/Patient/Patient.module.css","components/UI/Input/Input.module.css","containers/NewUser/NewUser.module.css","containers/Patient/NewPatientForm/NewPatientForm.module.css","axios.js","containers/Login/Login.js","containers/Home/Home.js","components/ImageWrapper/ImageWrapper.js","containers/Country/NewCountryForm/NewCountryForm.js","containers/Country/CountryTable/CountryTable.js","containers/Country/Country.js","components/UI/Input/Input.js","containers/Patient/NewPatientForm/NewPatientForm.js","containers/Patient/Patient.js","containers/NewUser/NewUser.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","instance","axios","create","baseURL","Login","state","username","password","onSubmit","e","preventDefault","user","post","then","res","console","log","data","window","localStorage","setItem","role","props","history","push","catch","err","alert","className","this","style","margin","type","id","placeholder","value","onChange","setState","target","onClick","Component","Home","getItem","Fragment","to","ImageWrapper","classes","headerWrapper","header1","NewCountryForm","countryName","covidPositive","idvIndex","htmlFor","checked","CountryTable","useState","useEffect","scope","Country","menu","Form","textAlign","Input","inputElement","inputClasses","invalid","shouldValidate","touched","Invalid","elementType","join","elementConfig","marginTop","changed","rows","cols","defaultValue","hidden","options","map","option","key","displayValue","marginRight","label","NewPatientForm","form","firstName","validation","valid","show","loading","lastName","country","covidPositiveContact","cold","lastFever","respiratoryRate","hypoxia","soreThroat","cough","dyspnea","tachypnea","alc","pneumonia","oxygenSaturation","nonHospitalPneumonia","inputChangedHandler","event","inputIdentifier","updatedForm","updatedFormElement","onFormSubmit","formData","formElementIdentifier","get","countryOptions","updatedElement","updatedElementConfig","formElementsArray","config","formElement","Patient","NewUser","App","path","exact","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"kGACAA,EAAOC,QAAU,CAAC,cAAgB,oCAAoC,QAAU,gC,mBCAhFD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,KAAO,wB,mBCAtDD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,KAAO,wB,mBCAtDD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,aAAe,4BAA4B,QAAU,uBAAuB,MAAQ,qBAAqB,SAAW,0B,mBCAnKD,EAAOC,QAAU,CAAC,KAAO,sBAAsB,KAAO,wB,2ICAtDD,EAAOC,QAAU,CAAC,KAAO,6BAA6B,QAAU,kC,4JCKjDC,E,OAJEC,EAAMC,OAAO,CAC1BC,QAAS,2BCuEEC,E,4MApEXC,MAAQ,CACJC,SAAU,GACVC,SAAU,I,EAGdC,SAAW,SAAAC,GACPA,EAAEC,iBAEF,IAAMC,EAAI,eAAQ,EAAKN,OACvBJ,EAAMW,KAAK,YAAaD,GACnBE,MAAK,SAAAC,GACFC,QAAQC,IAAIF,EAAIG,MAChBC,OAAOC,aAAaC,QAAQ,OAAQN,EAAIG,KAAKI,MAC7C,EAAKC,MAAMC,QAAQC,KAAK,QAE3BC,OAAM,SAAAC,GACHX,QAAQC,IAAIU,GACZC,MAAM,sC,uDAMR,IAAD,OACL,OACI,yBAAKC,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,sCACX,yBAAKA,UAAU,yBACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,0BAAd,WACA,0BAAMA,UAAU,cAAcpB,SAAUqB,KAAKrB,UACzC,yBAAKoB,UAAU,MAAME,MAAO,CAAEC,OAAQ,SAClC,2BACIC,KAAK,OACLC,GAAG,WACHL,UAAU,eACVM,YAAY,WACZC,MAAON,KAAKxB,MAAMC,SAClB8B,SAAU,SAAA3B,GAAC,OAAI,EAAK4B,SAAS,CAAE/B,SAAUG,EAAE6B,OAAOH,YAG1D,yBAAKP,UAAU,MAAME,MAAO,CAAEC,OAAQ,SAElC,2BAAOC,KAAK,WACRC,GAAG,WACHL,UAAU,eACVM,YAAY,WACZC,MAAON,KAAKxB,MAAME,SAClB6B,SAAU,SAAA3B,GAAC,OAAI,EAAK4B,SAAS,CAAE9B,SAAUE,EAAE6B,OAAOH,YAM1D,4BAAQP,UAAU,kDAAkDI,KAAK,UAAzE,WACA,4BAAQJ,UAAU,kDAAkDI,KAAK,SAASO,QAAS,kBAAM,EAAKjB,MAAMC,QAAQC,KAAK,OAAzH,QACA,wBAAII,UAAU,mB,GA3D9BY,aCqCLC,G,6KA5BP,OACI,yBAAKb,UAAU,WACX,yBAAKK,GAAG,SAASL,UAAU,cAC3B,yBAAKA,UAAU,kBACX,yBAAKK,GAAG,SAASL,UAAU,aACvB,yBAAKA,UAAU,SACX,wDAEJ,wBAAIA,UAAU,WAERV,OAAOC,aAAauB,QAAQ,QAExB,kBAAC,IAAMC,SAAP,KACE,4BAAI,kBAAC,IAAD,CAAMC,GAAG,WAAWhB,UAAU,UAA9B,oBACJ,4BAAI,kBAAC,IAAD,CAAMgB,GAAG,WAAWhB,UAAU,UAA9B,oBACqC,IAAxCV,OAAOC,aAAauB,QAAQ,QAC3B,4BAAI,kBAAC,IAAD,CAAME,GAAG,YAAYhB,UAAU,UAA/B,iBACJ,MANJ,4BAAI,kBAAC,IAAD,CAAMgB,GAAG,SAAShB,UAAU,UAA5B,UAHd,Y,GAjBLY,c,iBCOJK,EARM,WACjB,OACI,yBAAKjB,UAAWkB,IAAQC,eACpB,yBAAKnB,UAAWkB,IAAQE,QAAU,iB,iBCwD/BC,G,kNAzDX5C,MAAQ,CACJ6C,YAAa,GACbC,eAAe,EACfC,SAAU,I,EAGd5C,SAAW,SAAAC,GACPA,EAAEC,iBACFK,QAAQC,IAAI,EAAKX,Q,uDAIX,IAAD,OACL,OACI,6BACI,0BAAMG,SAAUqB,KAAKrB,UACjB,yBAAKoB,UAAU,cACX,2BAAOyB,QAAQ,eAAf,gBACA,2BACIrB,KAAK,OACLJ,UAAU,eACVK,GAAG,cACHC,YAAY,qBACZC,MAAON,KAAKxB,MAAM6C,YAClBd,SAAU,SAAA3B,GAAC,OAAI,EAAK4B,SAAS,CAACa,YAAazC,EAAE6B,OAAOH,YAG5D,yBAAKP,UAAU,cACX,2BAAOyB,QAAQ,YAAf,eACA,2BACIrB,KAAK,SACLJ,UAAU,eACVK,GAAG,WACHC,YAAY,0BACZC,MAAON,KAAKxB,MAAM+C,SAClBhB,SAAU,SAAA3B,GAAC,OAAI,EAAK4B,SAAS,CAACe,SAAU3C,EAAE6B,OAAOH,YAGzD,yBAAKP,UAAU,cACX,2BACII,KAAK,WACLJ,UAAU,mBACVK,GAAG,gBACHE,MAAON,KAAKxB,MAAM8C,cAClBf,SAAU,SAAA3B,GAAC,OAAI,EAAK4B,SAAS,CAACc,cAAe1C,EAAE6B,OAAOgB,aAC1D,2BAAO1B,UAAU,mBAAmByB,QAAQ,iBAA5C,iCAGJ,6BAEA,4BAAQrB,KAAK,SAASJ,UAAU,mBAAhC,gB,GApDSY,c,QC2Cde,EA5CM,SAACjC,GAAW,IAAD,EAEMkC,mBAAS,MAFf,6BAQ5B,OAJAC,qBAAU,cAEP,IAGC,6BACI,2BAAO7B,UAAU,SACb,2BAAOA,UAAU,cACb,4BACI,wBAAI8B,MAAM,OAAV,KACA,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,QACA,wBAAIA,MAAM,OAAV,YAGR,+BACI,4BACI,wBAAIA,MAAM,OAAV,KACA,oCACA,oCACA,qCAEJ,4BACI,wBAAIA,MAAM,OAAV,KACA,qCACA,wCACA,qCAEJ,4BACI,wBAAIA,MAAM,OAAV,KACA,qCACA,wCACA,6CCATC,E,uKA5BP,OACI,6BACI,kBAAC,EAAD,MACA,yBAAK/B,UAAWkB,IAAQc,MACpB,4BACI,4BAAI,kBAAC,IAAD,CAAMhB,GAAG,KAAT,WAIZ,6BAEA,yBAAKhB,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAWkB,IAAQe,KAAO,QAC3B,wBAAI/B,MAAO,CAACgC,UAAW,WAAvB,mBACA,kBAAC,EAAD,OAEJ,yBAAKlC,UAAU,OACX,wBAAIE,MAAO,CAACgC,UAAW,WAAvB,gBACA,kBAAC,EAAD,c,GAtBNtB,a,0CCyDPuB,EA7DD,SAACzC,GAEX,IAAI0C,EAAe,KAEbC,EAAe,CAACnB,IAAQkB,cAM9B,OAJI1C,EAAM4C,SAAW5C,EAAM6C,gBAAkB7C,EAAM8C,SAC/CH,EAAazC,KAAKsB,IAAQuB,SAGtB/C,EAAMgD,aACV,IAAM,QACFN,EAAe,yCACXpC,UAAWqC,EAAaM,KAAK,KAAQjD,EAAMkD,cAAcxC,OAAS,WAAa,KAAO,gBACtFF,MAAoC,aAA7BR,EAAMkD,cAAcxC,KAAsB,CAACyC,UAAW,QAAU,MACnEnD,EAAMkD,cAHC,CAIXrC,MAAOb,EAAMa,MACbC,SAAUd,EAAMoD,QAChBzC,GAAIX,EAAMW,MACd,MACJ,IAAM,WACF+B,EAAe,4CACXW,KAAK,IAAIC,KAAK,KACdhD,UAAWqC,EAAaM,KAAK,KAAO,iBAChCjD,EAAMkD,cAHC,CAIXrC,MAAOb,EAAMa,MACbC,SAAUd,EAAMoD,QAChBzC,GAAIX,EAAMW,MACd,MACJ,IAAM,SACF+B,EAAe,4BACXpC,UAAWqC,EAAaM,KAAK,KAAO,gBACpCpC,MAAOb,EAAMa,MACbC,SAAUd,EAAMoD,QAChBzC,GAAIX,EAAMW,IACN,4BAAQE,MAAM,GAAG0C,cAAY,EAACC,QAAM,IACvCxD,EAAMkD,cAAcO,QAAQC,KAAI,SAAAC,GAC7B,OAAO,4BAAQ9C,MAAO8C,EAAO9C,MAAO+C,IAAKD,EAAO9C,OAAQ8C,EAAOE,kBAGvE,MAEJ,QACInB,EAAe,yCACXpC,UAAWqC,EAAaM,KAAK,KAAO,iBAChCjD,EAAMkD,cAFC,CAGXrC,MAAOb,EAAMa,MACbC,SAAUd,EAAMoD,QAChBzC,GAAIX,EAAMW,MAGtB,OACI,yBAAKL,UAAU,kBACX,2BAAOA,UAAU,iBAAiByB,QAAS/B,EAAMW,GAAIH,MAAO,CAACsD,YAAa,SAAU9D,EAAM+D,OAC1F,6BACKrB,KCgRFsB,G,kNAnUXjF,MAAQ,CACJkF,KAAM,CACFC,UAAW,CACPlB,YAAa,QACbE,cAAe,CACXxC,KAAM,OACNE,YAAa,aAEjBuD,WAAY,GACZtD,MAAO,GACPuD,OAAO,EACPtB,SAAS,EACTiB,MAAO,cACPM,MAAM,EACNC,SAAS,GAEbC,SAAU,CACNvB,YAAa,QACbE,cAAe,CACXxC,KAAM,OACNE,YAAa,YAEjBuD,WAAY,GACZtD,MAAO,GACPuD,OAAO,EACPtB,SAAS,EACTiB,MAAO,aACPM,MAAM,EACNC,SAAS,GAEbE,QAAS,CACLxB,YAAa,SACbE,cAAe,CACXO,QAAS,IAEbU,WAAY,GACZtD,MAAO,GACPuD,OAAO,EACPtB,SAAS,EACTiB,MAAO,WACPM,MAAM,EACNC,SAAS,GAEbG,qBAAsB,CAClBzB,YAAa,QACbE,cAAe,CACXxC,KAAM,YAEVyD,WAAY,GACZtD,OAAO,EACPuD,OAAO,EACPtB,SAAS,EACTiB,MAAO,8BACPM,MAAM,EACNC,SAAS,GAEbI,KAAM,CACF1B,YAAa,QACbE,cAAe,CACXxC,KAAM,YAEVyD,WAAY,GACZtD,OAAO,EACPuD,OAAO,EACPtB,SAAS,EACTiB,MAAO,aACPM,MAAM,EACNC,SAAS,GAEbK,UAAW,CACP3B,YAAa,QACbE,cAAe,CACXxC,KAAM,SACNE,YAAa,cAEjBuD,WAAY,GACZtD,MAAO,GACPuD,OAAO,EACPtB,SAAS,EACTiB,MAAO,eACPM,MAAM,EACNC,SAAS,GAEbM,gBAAiB,CACb5B,YAAa,QACbE,cAAe,CACXxC,KAAM,SACNE,YAAa,oBAEjBuD,WAAY,GACZtD,MAAO,GACPuD,OAAO,EACPtB,SAAS,EACTiB,MAAO,qBACPM,MAAM,EACNC,SAAS,GAEbO,QAAS,CACL7B,YAAa,QACbE,cAAe,CACXxC,KAAM,YAEVyD,WAAY,GACZtD,OAAO,EACPuD,OAAO,EACPtB,SAAS,EACTiB,MAAO,gBACPM,MAAM,EACNC,SAAS,GAEbQ,WAAY,CACR9B,YAAa,QACbE,cAAe,CACXxC,KAAM,YAEVyD,WAAY,GACZtD,OAAO,EACPuD,OAAO,EACPtB,SAAS,EACTiB,MAAO,oBACPM,MAAM,EACNC,SAAS,GAEbS,MAAO,CACH/B,YAAa,QACbE,cAAe,CACXxC,KAAM,YAEVyD,WAAY,GACZtD,OAAO,EACPuD,OAAO,EACPtB,SAAS,EACTiB,MAAO,cACPM,MAAM,EACNC,SAAS,GAEbU,QAAS,CACLhC,YAAa,QACbE,cAAe,CACXxC,KAAM,YAEVyD,WAAY,GACZtD,OAAO,EACPuD,OAAO,EACPtB,SAAS,EACTiB,MAAO,gBACPM,MAAM,EACNC,SAAS,GAEbW,UAAW,CACPjC,YAAa,QACbE,cAAe,CACXxC,KAAM,YAEVyD,WAAY,GACZtD,OAAO,EACPuD,OAAO,EACPtB,SAAS,EACTiB,MAAO,kBACPM,MAAM,EACNC,SAAS,GAEbY,IAAK,CACDlC,YAAa,QACbE,cAAe,CACXxC,KAAM,SACNE,YAAa,OAEjBuD,WAAY,GACZtD,MAAO,GACPuD,OAAO,EACPtB,SAAS,EACTiB,MAAO,8BACPM,MAAM,EACNC,SAAS,GAEba,UAAW,CACPnC,YAAa,QACbE,cAAe,CACXxC,KAAM,YAEVyD,WAAY,GACZtD,OAAO,EACPuD,OAAO,EACPtB,SAAS,EACTiB,MAAO,kBACPM,MAAM,EACNC,SAAS,GAEbc,iBAAkB,CACdpC,YAAa,QACbE,cAAe,CACXxC,KAAM,SACNE,YAAa,qBAEjBuD,WAAY,GACZtD,MAAO,GACPuD,OAAO,EACPtB,SAAS,EACTiB,MAAO,sBACPM,MAAM,EACNC,SAAS,GAEbe,qBAAsB,CAClBrC,YAAa,QACbE,cAAe,CACXxC,KAAM,YAEVyD,WAAY,GACZtD,OAAO,EACPuD,OAAO,EACPtB,SAAS,EACTiB,MAAO,+BACPM,MAAM,EACNC,SAAS,K,EAyBrBgB,oBAAsB,SAACC,EAAOC,GAC1B,IAAMC,EAAW,eAAQ,EAAK1G,MAAMkF,MAE9ByB,EAAkB,eAAQD,EAAYD,IAE5C/F,QAAQC,IAAIgG,GACkC,aAA1CA,EAAmBxC,cAAcxC,MACjCgF,EAAmB7E,MAAQ0E,EAAMvE,OAAOgB,QACxCvC,QAAQC,IAAIgG,EAAmB7E,QAE/B6E,EAAmB7E,MAAQ0E,EAAMvE,OAAOH,MAG5C6E,EAAmB5C,SAAU,EAE7B2C,EAAYD,GAAmBE,EAO/B,EAAK3E,SAAS,CAAEkD,KAAMwB,K,EAG1BE,aAAe,SAACxG,GACZA,EAAEC,iBAEF,IAAMwG,EAAW,GAEjB,IAAK,IAAIC,KAAyB,EAAK9G,MAAMkF,KACZ,YAA1B4B,IAGHD,EAASC,GAAyB,EAAK9G,MAAMkF,KAAK4B,GAAuBhF,OAG7EpB,QAAQC,IAAIkG,I,kEAzDK,IAAD,OAChBjH,EAAMmH,IAAI,mBACLvG,MAAK,SAAAC,GACF,IAAMuG,EAAiBvG,EAAIG,KAAK+D,KAAI,SAAAc,GAChC,MAAO,CACH3D,MAAO2D,EAAQ5C,YACfiC,aAAcW,EAAQ5C,gBAGxB6D,EAAW,eAAQ,EAAK1G,MAAMkF,MAC9B+B,EAAc,eAAQP,EAAYjB,SAClCyB,EAAoB,eAAQD,EAAe9C,eACjD+C,EAAqBxC,QAArB,YAAmCsC,GACnCC,EAAe9C,cAAgB+C,EAC/BR,EAAYjB,QAAUwB,EACtB,EAAKjF,SAAS,CAAEkD,KAAMwB,OAEzBtF,OAAM,SAAAC,GAAG,OAAIX,QAAQC,IAAIU,Q,+BA4CxB,IAAD,OAEC8F,EAAoB,GAE1B,IAAK,IAAItC,KAAOrD,KAAKxB,MAAMkF,KACvBiC,EAAkBhG,KAAK,CACnBS,GAAIiD,EACJuC,OAAQ5F,KAAKxB,MAAMkF,KAAKL,KAIhC,IAAIK,EACAiC,EAAkBxC,KAAI,SAAA0C,GAClB,OAAO,kBAAC,EAAD,CACHxC,IAAKwC,EAAYzF,GACjBqC,YAAaoD,EAAYD,OAAOnD,YAChCE,cAAekD,EAAYD,OAAOjD,cAClCrC,MAAOuF,EAAYD,OAAOtF,MAC1BuC,QAAS,SAACmC,GAAD,OAAW,EAAKD,oBAAoBC,EAAOa,EAAYzF,KAChEiC,SAAUwD,EAAYD,OAAO/B,MAC7BvB,eAAgBuD,EAAYD,OAAOhC,WACnCrB,QAASsD,EAAYD,OAAOrD,QAC5BiB,MAAOqC,EAAYD,OAAOpC,MAC1BpD,GAAIyF,EAAYzF,QAM5B,OACI,yBAAKL,UAAU,aACX,0BAAMpB,SAAUqB,KAAKoF,cAChB1B,EACD,yBAAK3D,UAAU,OACX,4BAAQA,UAAU,kBAAkBI,KAAK,UAAzC,iB,GA5TKQ,cC8BdmF,E,uKA3BP,OACI,6BACI,kBAAC,EAAD,MACA,yBAAK/F,UAAWkB,IAAQc,MACpB,4BACI,4BAAI,kBAAC,IAAD,CAAMhB,GAAG,KAAT,WAIZ,6BAEA,yBAAKhB,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAWkB,IAAQe,KAAO,QAC3B,wBAAI/B,MAAO,CAAEgC,UAAW,WAAxB,mBACA,kBAAC,EAAD,OAEJ,yBAAKlC,UAAU,OACX,wBAAIE,MAAO,CAAEgC,UAAW,WAAxB,wB,GApBNtB,a,iBC+EPoF,E,4MA9EXvH,MAAQ,CACJC,SAAU,GACVC,SAAU,GACVc,KAAM,G,EAGVb,SAAW,SAAAC,GACPA,EAAEC,iBAEFK,QAAQC,IAAI,EAAKX,Q,uDAIX,IAAD,OACL,OACI,6BACI,kBAAC,EAAD,MAEA,yBAAKuB,UAAWkB,IAAQc,MACpB,4BACI,4BAAI,kBAAC,IAAD,CAAMhB,GAAG,KAAT,WAIZ,6BAEA,yBAAKhB,UAAU,YAAYE,MAAO,CAAEC,OAAQ,OAAQ+B,UAAW,WAC3D,oEAEA,yBAAKlC,UAAU,aACX,yBAAKA,UAAU,OACX,yBAAKA,UAAWkB,IAAQe,KAAO,QAC3B,0BAAMrD,SAAUqB,KAAKrB,UACjB,yBAAKoB,UAAU,cACX,2BAAOyB,QAAQ,YAAf,YACA,2BACIrB,KAAK,OACLJ,UAAU,eACVK,GAAG,WACHC,YAAY,iBACZC,MAAON,KAAKxB,MAAMC,SAClB8B,SAAU,SAAA3B,GAAC,OAAI,EAAK4B,SAAS,CAAC/B,SAAUG,EAAE6B,OAAOH,YAIzD,yBAAKP,UAAU,cACX,2BAAOyB,QAAQ,YAAf,YACA,2BACIrB,KAAK,WACLJ,UAAU,eACVK,GAAG,WACHC,YAAY,iBACZC,MAAON,KAAKxB,MAAME,SAClB6B,SAAU,SAAA3B,GAAC,OAAI,EAAK4B,SAAS,CAAC9B,SAAUE,EAAE6B,OAAOH,YAIzD,yBAAKP,UAAU,cACX,2BAAOyB,QAAQ,QAAf,eACA,4BAAQzB,UAAU,eAAeK,GAAG,OAAOG,SAAU,SAAA3B,GAAC,OAAI,EAAK4B,SAAS,CAAChB,KAAMZ,EAAE6B,OAAOH,UACpF,4BAAQA,MAAM,IAAI0C,cAAY,GAA9B,UACA,4BAAQ1C,MAAM,KAAd,mBAIR,6BAEA,4BAAQH,KAAK,SAASJ,UAAU,mBAAhC,sB,GArEdY,aCoBPqF,MAff,SAAavG,GACX,OAEI,kBAAC,IAAD,KACE,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOwG,KAAK,SAASC,OAAK,EAACC,UAAW5H,IACtC,kBAAC,IAAD,CAAO0H,KAAK,WAAWE,UAAWrE,IAClC,kBAAC,IAAD,CAAOmE,KAAK,WAAWE,UAAWL,IAClC,kBAAC,IAAD,CAAOG,KAAK,YAAYE,UAAWJ,IACnC,kBAAC,IAAD,CAAOE,KAAK,IAAIE,UAAWvF,OCPnBwF,QACW,cAA7B/G,OAAOgH,SAASC,UAEe,UAA7BjH,OAAOgH,SAASC,UAEhBjH,OAAOgH,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/H,MAAK,SAAAgI,GACJA,EAAaC,gBAEdrH,OAAM,SAAAsH,GACLhI,QAAQgI,MAAMA,EAAMC,c","file":"static/js/main.eebc9bdd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerWrapper\":\"ImageWrapper_headerWrapper__Ub6nl\",\"header1\":\"ImageWrapper_header1__3PAiB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Country_menu__38PIG\",\"Form\":\"Country_Form__1Z-3J\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Patient_menu__BTDEh\",\"Form\":\"Patient_Form__35hW5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__Cf7w9\",\"InputElement\":\"Input_InputElement__3d2uK\",\"Invalid\":\"Input_Invalid__2Ohhx\",\"Label\":\"Input_Label__1eQnU\",\"CheckBox\":\"Input_CheckBox__1sBEw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"NewUser_menu___3Ezp\",\"Form\":\"NewUser_Form__2xOBb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"NewPatientForm_Form__27H5h\",\"Buttons\":\"NewPatientForm_Buttons__BO1W3\"};","import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'http://localhost:8080/'\r\n});\r\n\r\nexport default instance;","import React, { Component } from 'react';\r\nimport './Login.css';\r\nimport axios from '../../axios';\r\n\r\nclass Login extends Component {\r\n\r\n    state = {\r\n        username: '',\r\n        password: ''\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const user = { ...this.state };\r\n        axios.post(\"api/login\", user)\r\n            .then(res => {\r\n                console.log(res.data);\r\n                window.localStorage.setItem(\"auth\", res.data.role);\r\n                this.props.history.push(\"/\");\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n                alert(\"Login unsuccessful, try again.\")\r\n            });\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\r\n                        <div className=\"card card-signin my-5\">\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title text-center\">Sign In</h5>\r\n                                <form className=\"form-signin\" onSubmit={this.onSubmit}>\r\n                                    <div className=\"row\" style={{ margin: '15px' }}>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            id=\"username\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Username\"\r\n                                            value={this.state.username}\r\n                                            onChange={e => this.setState({ username: e.target.value })} />\r\n                                    </div>\r\n\r\n                                    <div className=\"row\" style={{ margin: '15px' }}>\r\n\r\n                                        <input type=\"password\"\r\n                                            id=\"password\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Password\"\r\n                                            value={this.state.password}\r\n                                            onChange={e => this.setState({ password: e.target.value })}\r\n                                        />\r\n                                    </div>\r\n\r\n\r\n\r\n                                    <button className=\"btn btn-lg btn-primary btn-block text-uppercase\" type=\"submit\">Sign in</button>\r\n                                    <button className=\"btn btn-lg btn-primary btn-block text-uppercase\" type=\"button\" onClick={() => this.props.history.push(\"/\")}>Back</button>\r\n                                    <hr className=\"my-4\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport './Home.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Home extends Component {\r\n\r\n    // componentDidMount() {\r\n    //     if (!window.localStorage.getItem(\"auth\")) {\r\n    //         this.props.history.push(\"/login\");\r\n    //     }\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <div className='wrapper'>\r\n                <div id='header' className='container'></div>\r\n                <div className='banner-wrapper'>\r\n                    <div id='banner' className='container'>\r\n                        <div className='title'>\r\n                            <h2>Pacient Triage COVID-19</h2>\r\n                        </div>\r\n                        <ul className='actions'>\r\n\r\n                            {!window.localStorage.getItem(\"auth\")\r\n                                ? <li><Link to=\"/login\" className='button'>LOGIN</Link></li>\r\n                                : <React.Fragment>\r\n                                    <li><Link to=\"/country\" className=\"button\">ADD NEW COUNTRY</Link></li>\r\n                                    <li><Link to=\"/patient\" className='button'>ADD NEW PATIENT</Link></li>\r\n                                    {window.localStorage.getItem(\"auth\") === 2 \r\n                                    ? <li><Link to=\"/new-user\" className='button'>ADD NEW USER</Link></li>\r\n                                    : null}\r\n                                </React.Fragment>}\r\n                        }\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport classes from './ImageWrapper.module.css';\r\n\r\nconst ImageWrapper = () => {\r\n    return (\r\n        <div className={classes.headerWrapper}>\r\n            <div className={classes.header1 + \" container\"}></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImageWrapper;","import React, { Component } from 'react';\r\nimport classes from './NewCountryForm.module.css';\r\n\r\nclass NewCountryForm extends Component {\r\n\r\n    state = {\r\n        countryName: '',\r\n        covidPositive: false,\r\n        idvIndex: ''\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"countryName\">Country name</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"countryName\"\r\n                            placeholder=\"Enter country name\"\r\n                            value={this.state.countryName}\r\n                            onChange={e => this.setState({countryName: e.target.value})} />\r\n                    </div>\r\n                    \r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"idvIndex\">Country IDV</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            className=\"form-control\"\r\n                            id=\"idvIndex\"\r\n                            placeholder=\"Enter country IDV index\"\r\n                            value={this.state.idvIndex}\r\n                            onChange={e => this.setState({idvIndex: e.target.value})} />\r\n                    </div>\r\n\r\n                    <div className=\"form-check\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id=\"covidPositive\"\r\n                            value={this.state.covidPositive}\r\n                            onChange={e => this.setState({covidPositive: e.target.checked}) }/>\r\n                        <label className=\"form-check-label\" htmlFor=\"covidPositive\">Country is COVID-19 positive</label>\r\n                    </div>\r\n\r\n                    <br />\r\n\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewCountryForm;","import React, { useEffect, useState } from 'react';\r\n\r\nconst CountryTable = (props) => {\r\n\r\n    const [countries, setCountries] = useState(null);\r\n\r\n    useEffect(() => {\r\n        //axios za dobavljanje country-a\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <table className=\"table\">\r\n                <thead className=\"thead-dark\">\r\n                    <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">First</th>\r\n                        <th scope=\"col\">Last</th>\r\n                        <th scope=\"col\">Handle</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr>\r\n                        <th scope=\"row\">1</th>\r\n                        <td>Mark</td>\r\n                        <td>Otto</td>\r\n                        <td>@mdo</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th scope=\"row\">2</th>\r\n                        <td>Jacob</td>\r\n                        <td>Thornton</td>\r\n                        <td>@fat</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <th scope=\"row\">3</th>\r\n                        <td>Larry</td>\r\n                        <td>the Bird</td>\r\n                        <td>@twitter</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CountryTable;","import React, { Component } from 'react';\r\nimport ImageWrapper from '../../components/ImageWrapper/ImageWrapper';\r\nimport classes from './Country.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport NewCountryForm from './NewCountryForm/NewCountryForm';\r\nimport CountryTable from './CountryTable/CountryTable';\r\n\r\nclass Country extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ImageWrapper />\r\n                <div className={classes.menu}>\r\n                    <ul>\r\n                        <li><Link to=\"/\">Home</Link></li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <hr/>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className={classes.Form + \" col\"}>\r\n                            <h5 style={{textAlign: \"center\"}}>Add new country</h5>\r\n                            <NewCountryForm />\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <h5 style={{textAlign: \"center\"}}>Country list</h5>\r\n                            <CountryTable />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Country;","import React from 'react';\r\nimport classes from './Input.module.css';\r\n\r\nconst Input = (props) => {\r\n\r\n    let inputElement = null;\r\n\r\n    const inputClasses = [classes.inputElement];\r\n\r\n    if (props.invalid && props.shouldValidate && props.touched) {\r\n        inputClasses.push(classes.Invalid);\r\n    }\r\n\r\n    switch (props.elementType) {\r\n        case ('input'):\r\n            inputElement = <input\r\n                className={inputClasses.join(' ') +  props.elementConfig.type === 'checkbox' ? null : \" form-control\"}\r\n                style={props.elementConfig.type === \"checkbox\" ? {marginTop: '13px'} : null}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed}\r\n                id={props.id} />;\r\n            break;\r\n        case ('textarea'):\r\n            inputElement = <textarea\r\n                rows=\"3\" cols=\"60\"\r\n                className={inputClasses.join(' ') + \" form-control\"}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed}\r\n                id={props.id} />;\r\n            break;\r\n        case ('select'):\r\n            inputElement = <select\r\n                className={inputClasses.join(' ') + \" form-control\"}\r\n                value={props.value}\r\n                onChange={props.changed}\r\n                id={props.id}>\r\n                    <option value=\"\" defaultValue hidden></option>\r\n                {props.elementConfig.options.map(option => {\r\n                    return <option value={option.value} key={option.value}>{option.displayValue}</option>\r\n                })}\r\n            </select>\r\n            break;\r\n\r\n        default:\r\n            inputElement = <input\r\n                className={inputClasses.join(' ') + \" form-control\"}\r\n                {...props.elementConfig}\r\n                value={props.value}\r\n                onChange={props.changed}\r\n                id={props.id} />\r\n    }\r\n\r\n    return (\r\n        <div className=\"form-group row\">\r\n            <label className=\"col-form-label\" htmlFor={props.id} style={{marginRight: '15px'}}>{props.label}</label>\r\n            <div>\r\n                {inputElement}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Input;","import React, { Component } from 'react';\r\nimport Input from '../../../components/UI/Input/Input';\r\nimport classes from './NewPatientForm.module.css';\r\nimport axios from '../../../axios';\r\n\r\nclass NewPatientForm extends Component {\r\n\r\n    state = {\r\n        form: {\r\n            firstName: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Firstname'\r\n                },\r\n                validation: {},\r\n                value: '',\r\n                valid: true,\r\n                touched: false,\r\n                label: 'Firstname: ',\r\n                show: false,\r\n                loading: false\r\n            },\r\n            lastName: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'text',\r\n                    placeholder: 'Lastname'\r\n                },\r\n                validation: {},\r\n                value: '',\r\n                valid: true,\r\n                touched: false,\r\n                label: 'Lastname: ',\r\n                show: false,\r\n                loading: false\r\n            },\r\n            country: {\r\n                elementType: 'select',\r\n                elementConfig: {\r\n                    options: []\r\n                },\r\n                validation: {},\r\n                value: '',\r\n                valid: true,\r\n                touched: false,\r\n                label: 'Country:',\r\n                show: false,\r\n                loading: false\r\n            },\r\n            covidPositiveContact: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'checkbox'\r\n                },\r\n                validation: {},\r\n                value: false,\r\n                valid: true,\r\n                touched: false,\r\n                label: 'Had contact with COVID-19: ',\r\n                show: false,\r\n                loading: false\r\n            },\r\n            cold: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'checkbox'\r\n                },\r\n                validation: {},\r\n                value: false,\r\n                valid: true,\r\n                touched: false,\r\n                label: 'Has cold: ',\r\n                show: false,\r\n                loading: false\r\n            },\r\n            lastFever: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'number',\r\n                    placeholder: 'Last fever'\r\n                },\r\n                validation: {},\r\n                value: \"\",\r\n                valid: true,\r\n                touched: false,\r\n                label: 'Last fever: ',\r\n                show: false,\r\n                loading: false\r\n            },\r\n            respiratoryRate: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'number',\r\n                    placeholder: 'Respiratory rate'\r\n                },\r\n                validation: {},\r\n                value: \"\",\r\n                valid: true,\r\n                touched: false,\r\n                label: 'Respiratory rate: ',\r\n                show: false,\r\n                loading: false\r\n            },\r\n            hypoxia: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'checkbox'\r\n                },\r\n                validation: {},\r\n                value: false,\r\n                valid: true,\r\n                touched: false,\r\n                label: 'Has hypoxia: ',\r\n                show: false,\r\n                loading: false\r\n            },\r\n            soreThroat: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'checkbox'\r\n                },\r\n                validation: {},\r\n                value: false,\r\n                valid: true,\r\n                touched: false,\r\n                label: 'Has sore throat: ',\r\n                show: false,\r\n                loading: false\r\n            },\r\n            cough: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'checkbox'\r\n                },\r\n                validation: {},\r\n                value: false,\r\n                valid: true,\r\n                touched: false,\r\n                label: 'Has cough: ',\r\n                show: false,\r\n                loading: false\r\n            },\r\n            dyspnea: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'checkbox'\r\n                },\r\n                validation: {},\r\n                value: false,\r\n                valid: true,\r\n                touched: false,\r\n                label: 'Has dyspnea: ',\r\n                show: false,\r\n                loading: false\r\n            },\r\n            tachypnea: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'checkbox'\r\n                },\r\n                validation: {},\r\n                value: false,\r\n                valid: true,\r\n                touched: false,\r\n                label: 'Has tachypnea: ',\r\n                show: false,\r\n                loading: false\r\n            },\r\n            alc: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'number',\r\n                    placeholder: 'ALC'\r\n                },\r\n                validation: {},\r\n                value: \"\",\r\n                valid: true,\r\n                touched: false,\r\n                label: 'Absolute lymphocite count: ',\r\n                show: false,\r\n                loading: false\r\n            },\r\n            pneumonia: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'checkbox'\r\n                },\r\n                validation: {},\r\n                value: false,\r\n                valid: true,\r\n                touched: false,\r\n                label: 'Has pneumonia: ',\r\n                show: false,\r\n                loading: false\r\n            },\r\n            oxygenSaturation: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'number',\r\n                    placeholder: 'Oxygen saturation'\r\n                },\r\n                validation: {},\r\n                value: \"\",\r\n                valid: true,\r\n                touched: false,\r\n                label: 'Oxygen saturation: ',\r\n                show: false,\r\n                loading: false\r\n            },\r\n            nonHospitalPneumonia: {\r\n                elementType: 'input',\r\n                elementConfig: {\r\n                    type: 'checkbox'\r\n                },\r\n                validation: {},\r\n                value: false,\r\n                valid: true,\r\n                touched: false,\r\n                label: 'Has non hospital pneumonia: ',\r\n                show: false,\r\n                loading: false\r\n            },\r\n        },\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios.get(\"country/get/all\")\r\n            .then(res => {\r\n                const countryOptions = res.data.map(country => {\r\n                    return {\r\n                        value: country.countryName,\r\n                        displayValue: country.countryName\r\n                    };\r\n                })\r\n                const updatedForm = { ...this.state.form };\r\n                const updatedElement = { ...updatedForm.country };\r\n                const updatedElementConfig = { ...updatedElement.elementConfig };\r\n                updatedElementConfig.options = [...countryOptions];\r\n                updatedElement.elementConfig = updatedElementConfig;\r\n                updatedForm.country = updatedElement;\r\n                this.setState({ form: updatedForm });\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    inputChangedHandler = (event, inputIdentifier) => {\r\n        const updatedForm = { ...this.state.form };\r\n\r\n        const updatedFormElement = { ...updatedForm[inputIdentifier] };\r\n\r\n        console.log(updatedFormElement);\r\n        if (updatedFormElement.elementConfig.type === \"checkbox\") {\r\n            updatedFormElement.value = event.target.checked;\r\n            console.log(updatedFormElement.value);\r\n        } else {\r\n            updatedFormElement.value = event.target.value;\r\n        }\r\n        // updatedFormElement.valid = checkFormValidity(updatedFormElement.value, updatedFormElement.validation);\r\n        updatedFormElement.touched = true;\r\n\r\n        updatedForm[inputIdentifier] = updatedFormElement;\r\n\r\n        // let formIsValid = true;\r\n        // for (let input in updatedForm) {\r\n        //     formIsValid = updatedForm[input].valid && formIsValid;\r\n        // }\r\n\r\n        this.setState({ form: updatedForm });\r\n    }\r\n\r\n    onFormSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = {};\r\n\r\n        for (let formElementIdentifier in this.state.form) {\r\n            if(formElementIdentifier === \"country\"){\r\n                continue;\r\n            }\r\n            formData[formElementIdentifier] = this.state.form[formElementIdentifier].value;\r\n        }\r\n\r\n        console.log(formData);\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const formElementsArray = [];\r\n\r\n        for (let key in this.state.form) {\r\n            formElementsArray.push({\r\n                id: key,\r\n                config: this.state.form[key]\r\n            });\r\n        }\r\n\r\n        let form = (\r\n            formElementsArray.map(formElement => {\r\n                return <Input\r\n                    key={formElement.id}\r\n                    elementType={formElement.config.elementType}\r\n                    elementConfig={formElement.config.elementConfig}\r\n                    value={formElement.config.value}\r\n                    changed={(event) => this.inputChangedHandler(event, formElement.id)}\r\n                    invalid={!formElement.config.valid}\r\n                    shouldValidate={formElement.config.validation}\r\n                    touched={formElement.config.touched}\r\n                    label={formElement.config.label}\r\n                    id={formElement.id}\r\n                />\r\n            })\r\n        );\r\n\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <form onSubmit={this.onFormSubmit}>\r\n                    {form}\r\n                    <div className=\"row\">\r\n                        <button className=\"btn btn-primary\" type=\"submit\">Submit</button>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewPatientForm;","import React, { Component } from 'react';\r\nimport ImageWrapper from '../../components/ImageWrapper/ImageWrapper';\r\nimport classes from './Patient.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport NewPatientForm from './NewPatientForm/NewPatientForm';\r\n\r\nclass Patient extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ImageWrapper />\r\n                <div className={classes.menu}>\r\n                    <ul>\r\n                        <li><Link to=\"/\">Home</Link></li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <hr />\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className={classes.Form + \" col\"}>\r\n                            <h5 style={{ textAlign: \"center\" }}>Add new Patient</h5>\r\n                            <NewPatientForm />\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <h5 style={{ textAlign: \"center\" }}>Patient list</h5>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Patient;","import React, { Component } from 'react';\r\nimport classes from './NewUser.module.css';\r\nimport ImageWrapper from '../../components/ImageWrapper/ImageWrapper';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass NewUser extends Component {\r\n\r\n    state = {\r\n        username: '',\r\n        password: '',\r\n        role: 1\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        console.log(this.state);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ImageWrapper />\r\n\r\n                <div className={classes.menu}>\r\n                    <ul>\r\n                        <li><Link to=\"/\">Home</Link></li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <hr />\r\n\r\n                <div className=\"container\" style={{ margin: 'auto', textAlign: 'center' }}>\r\n                    <h5>Register new Doctor or Administrator</h5>\r\n\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n                            <div className={classes.Form + \" col\"}>\r\n                                <form onSubmit={this.onSubmit}>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"username\">Username</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"form-control\"\r\n                                            id=\"username\"\r\n                                            placeholder=\"Enter username\"\r\n                                            value={this.state.username}\r\n                                            onChange={e => this.setState({username: e.target.value})}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"password\">Password</label>\r\n                                        <input\r\n                                            type=\"password\"\r\n                                            className=\"form-control\"\r\n                                            id=\"password\"\r\n                                            placeholder=\"Enter password\"\r\n                                            value={this.state.password}\r\n                                            onChange={e => this.setState({password: e.target.value})}\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"role\">Role select</label>\r\n                                        <select className=\"form-control\" id=\"role\" onChange={e => this.setState({role: e.target.value})}>\r\n                                            <option value=\"1\" defaultValue>Doctor</option>\r\n                                            <option value=\"2\">Administrator</option>\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                    <br />\r\n\r\n                                    <button type=\"submit\" className=\"btn btn-primary\">Register</button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewUser;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Login from './containers/Login/Login';\nimport Home from './containers/Home/Home';\nimport Country from './containers/Country/Country';\nimport Patient from './containers/Patient/Patient';\nimport NewUser from './containers/NewUser/NewUser';\n\n\nfunction App(props) {\n  return (\n    \n      <BrowserRouter>\n        <Switch>\n            <Route path=\"/login\" exact component={Login} />\n            <Route path=\"/country\" component={Country} />\n            <Route path=\"/patient\" component={Patient} />\n            <Route path=\"/new-user\" component={NewUser} />\n            <Route path=\"/\" component={Home}/>\n        </Switch>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter} from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}