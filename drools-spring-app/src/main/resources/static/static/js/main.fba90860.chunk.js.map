{"version":3,"sources":["components/ImageWrapper/ImageWrapper.module.css","containers/Country/Country.module.css","containers/Login/Login.js","containers/Home/Home.js","components/ImageWrapper/ImageWrapper.js","containers/Country/NewCountryForm/NewCountryForm.js","containers/Country/CountryTable/CountryTable.js","containers/Country/Country.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Login","state","username","password","onSubmit","e","preventDefault","className","this","style","margin","type","id","placeholder","value","onChange","setState","target","Component","Home","window","localStorage","getItem","to","ImageWrapper","classes","headerWrapper","header1","NewCountryForm","countryName","covidPositive","idvIndex","console","log","Form","htmlFor","checked","CountryTable","props","useState","useEffect","Country","menu","textAlign","App","path","exact","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fba90860.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerWrapper\":\"ImageWrapper_headerWrapper__Ub6nl\",\"header1\":\"ImageWrapper_header1__3PAiB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"menu\":\"Country_menu__38PIG\",\"Form\":\"Country_Form__1Z-3J\"};","import React, { Component } from 'react';\r\nimport './Login.css';\r\n\r\nclass Login extends Component {\r\n\r\n    state = {\r\n        username: '',\r\n        password: ''\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        const user = {...this.state};\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\r\n                        <div className=\"card card-signin my-5\">\r\n                            <div className=\"card-body\">\r\n                                <h5 className=\"card-title text-center\">Sign In</h5>\r\n                                <form className=\"form-signin\" onSubmit={this.onSubmit}>\r\n                                    <div className=\"row\" style={{margin: '15px'}}>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            id=\"username\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Username\"\r\n                                            value={this.state.username}\r\n                                            onChange={e => this.setState({ username: e.target.value })} />\r\n                                    </div>\r\n\r\n                                    <div className=\"row\" style={{margin: '15px'}}>\r\n\r\n                                        <input type=\"password\"\r\n                                            id=\"password\"\r\n                                            className=\"form-control\"\r\n                                            placeholder=\"Password\"\r\n                                            value={this.state.password}\r\n                                            onChange={e => this.setState({ password: e.target.value })}\r\n                                        />\r\n                                    </div>\r\n\r\n\r\n\r\n                                    <button className=\"btn btn-lg btn-primary btn-block text-uppercase\" type=\"submit\">Sign in</button>\r\n                                    <hr className=\"my-4\" />\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport './Home.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Home extends Component {\r\n\r\n    componentDidMount() {\r\n        if(!window.localStorage.getItem(\"auth\")){\r\n            //this.props.history.push(\"/login\");\r\n          }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='wrapper'>\r\n                <div id='header' className='container'></div>\r\n                <div className='banner-wrapper'>\r\n                    <div id='banner' className='container'>\r\n                        <div className='title'>\r\n                            <h2>Pacient Triage COVID-19</h2>\r\n                        </div>\r\n                        <ul className='actions'>\r\n                            <li><Link to=\"/country\" className=\"button\">ADD NEW COUNTRY</Link></li>\r\n                            <li><Link to=\"\" className='button'>ADD NEW PATIENT</Link></li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport classes from './ImageWrapper.module.css';\r\n\r\nconst ImageWrapper = () => {\r\n    return (\r\n        <div className={classes.headerWrapper}>\r\n            <div className={classes.header1 + \" container\"}></div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ImageWrapper;","import React, { Component } from 'react';\r\nimport classes from './NewCountryForm.module.css';\r\n\r\nclass NewCountryForm extends Component {\r\n\r\n    state = {\r\n        countryName: '',\r\n        covidPositive: false,\r\n        idvIndex: ''\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        console.log(this.state);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form className={classes.Form} onSubmit={this.onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"countryName\">Country name</label>\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"form-control\"\r\n                            id=\"countryName\"\r\n                            placeholder=\"Enter country name\"\r\n                            value={this.state.countryName}\r\n                            onChange={e => this.setState({countryName: e.target.value})} />\r\n                    </div>\r\n                    \r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"idvIndex\">Country IDV</label>\r\n                        <input\r\n                            type=\"number\"\r\n                            className=\"form-control\"\r\n                            id=\"idvIndex\"\r\n                            placeholder=\"Enter country IDV index\"\r\n                            value={this.state.idvIndex}\r\n                            onChange={e => this.setState({idvIndex: e.target.value})} />\r\n                    </div>\r\n\r\n                    <div className=\"form-check\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            className=\"form-check-input\"\r\n                            id=\"covidPositive\"\r\n                            value={this.state.covidPositive}\r\n                            onChange={e => this.setState({covidPositive: e.target.checked}) }/>\r\n                        <label className=\"form-check-label\" htmlFor=\"covidPositive\">Country is COVID-19 positive</label>\r\n                    </div>\r\n\r\n                    <br />\r\n\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewCountryForm;","import React, { useEffect, useState } from 'react';\r\n\r\nconst CountryTable = (props) => {\r\n\r\n    const [countries, setCountries] = useState(null);\r\n\r\n    useEffect(() => {\r\n        //axios za dobavljanje country-a\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <p>Country list</p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CountryTable;","import React, { Component } from 'react';\r\nimport ImageWrapper from '../../components/ImageWrapper/ImageWrapper';\r\nimport classes from './Country.module.css';\r\nimport { Link } from 'react-router-dom';\r\nimport NewCountryForm from './NewCountryForm/NewCountryForm';\r\nimport CountryTable from './CountryTable/CountryTable';\r\n\r\nclass Country extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ImageWrapper />\r\n                <div className={classes.menu}>\r\n                    <ul>\r\n                        <li><Link to=\"/\">Home</Link></li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <div className={classes.Form + \" col\"}>\r\n                            <h5 style={{textAlign: \"center\"}}>Add new country</h5>\r\n                            <NewCountryForm />\r\n                        </div>\r\n                        <div className=\"col\">\r\n                            <h5 style={{textAlign: \"center\"}}>Country list</h5>\r\n                            <CountryTable />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Country;","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Login from './containers/Login/Login';\nimport Home from './containers/Home/Home';\nimport Country from './containers/Country/Country';\n\n\nfunction App(props) {\n  return (\n    \n      <BrowserRouter>\n        <Switch>\n            <Route path=\"/login\" exact component={Login} />\n            <Route path=\"/country\" component={Country} />\n            <Route path=\"/\" component={Home}/>\n        </Switch>\n      </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter} from 'react-router-dom';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}